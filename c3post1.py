# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c1post.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QApplication, QFileDialog  # 导入qt窗体类
from post1func import post1
from post1func import NewQLineEdit
import matplotlib.pyplot as plt
from matplotlib.pyplot import savefig

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(813, 534)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 781, 491))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.pushButton = QtWidgets.QPushButton(self.tab)
        self.pushButton.setGeometry(QtCore.QRect(180, 70, 121, 41))
        self.pushButton.setStyleSheet("font: 75 9pt \"微软雅黑\";")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab)
        self.pushButton_2.setGeometry(QtCore.QRect(490, 150, 121, 31))
        self.pushButton_2.setStyleSheet("font: 9pt \"Times New Roman\";")
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit = NewQLineEdit(self.tab)
        self.lineEdit.setGeometry(QtCore.QRect(180, 240, 291, 31))
        self.lineEdit.setStyleSheet("font: 75 9pt \"微软雅黑\";")
        self.lineEdit.setObjectName("lineEdit")
        self.textEdit = QtWidgets.QTextEdit(self.tab)
        self.textEdit.setGeometry(QtCore.QRect(180, 140, 291, 71))
        self.textEdit.setStyleSheet("font: 75 9pt \"微软雅黑\";\n"
"")
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.tab)
        self.textEdit_2.setGeometry(QtCore.QRect(180, 310, 291, 71))
        self.textEdit_2.setStyleSheet("font: 75 9pt \"微软雅黑\";")
        self.textEdit_2.setObjectName("textEdit_2")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.tab_3)
        self.pushButton_3.setGeometry(QtCore.QRect(540, 200, 121, 41))
        self.pushButton_3.setStyleSheet("font: 75 9pt \"微软雅黑\";")
        self.pushButton_3.setObjectName("pushButton_3")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label = QtWidgets.QLabel(self.tab_2)
        self.label.setGeometry(QtCore.QRect(20, 30, 641, 391))
        self.label.setStyleSheet("font: 75 24pt \"微软雅黑\";")
        self.label.setObjectName("label")
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 813, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "选择文件"))
        self.pushButton_2.setText(_translate("MainWindow", "post"))
        self.lineEdit.setText(_translate("MainWindow", "文件拖拽到此处"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'微软雅黑\'; font-size:9pt; font-weight:72; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\'; font-weight:600;\">文件名选择</span></p></body></html>"))
        self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'微软雅黑\'; font-size:9pt; font-weight:72; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\'; font-weight:600;\">发送状态</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "服务器发送"))
        self.pushButton_3.setText(_translate("MainWindow", "Run"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Tab 3"))
        self.label.setText(_translate("MainWindow", "结果图显示位置"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "结果图"))


    def openfile(self):
        try:
            global filep
            # 打开文件的窗体，进行图片的选择
            openfile_name = QFileDialog.getOpenFileName()
            if openfile_name[0] != '':

            #格式测试
                print(openfile_name[0])

                filep = openfile_name[0]   # 获取选中的图片路径
                self.textEdit.setText(filep)
        except:
            pass
    def post(self):
        try:
            global filep
            #要调用才能选中文件地址
            self.drag_addrss()


            result=post1(filep)



            self.textEdit_2.setText(result)
        except:
            pass

    def readQss(style):
        try:
            with open(style, 'r') as f:
                return f.read()
        except:
            pass

    def drag_addrss(self):
        try:
             global filep
             filep=self.lineEdit.text()
             # test
             self.textEdit.setText(filep)
        except:
            pass



    def tplot(self,x_data , y_data ):
        # 正确显示中文和负号
        try:
            plt.rcParams["font.sans-serif"] = ["SimHei"]
            plt.rcParams["axes.unicode_minus"] = False

            # 画图，plt.bar()可以画柱状图
            for i in range(len(x_data)):
                plt.bar(x_data[i], y_data[i])
            # 设置图片名称
            plt.title("销量分析")
            # 设置x轴标签名
            plt.xlabel("年份")
            # 设置y轴标签名
            plt.ylabel("销量")
            # 显示  自动覆盖生成新图
            savefig(r".\tpolt\1.jpg")
            self.label.setPixmap(QtGui.QPixmap(r".\tpolt\1.jpg"))
            self.label.setScaledContents(True)
        except:
            error_dialog = QtWidgets.QErrorMessage()
            error_dialog.showMessage('''Oh no!tplot函数出现问题，请检查一下!
                    ┭┮﹏┭┮''')
if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    styleFile = r".\QSS-master\ElegantDark.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\ConsoleStyle.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\ManjaroMix.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\MaterialDark.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\AMOLED.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\Aqua.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\MacOS.qss"
    # styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\NeonButtons.qss"
    #styleFile = r"C:\Users\komorip\Desktop\daliy\python\wrb\QSS-master\Ubuntu.qss"
    # apply_stylesheet(app, theme='dark_teal.xml')

    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    # app.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5())
    # or in new API
    # app.setStyleSheet(qdarkstyle.load_stylesheet(qt_api='pyqt5'))
    style = Ui_MainWindow.readQss(styleFile)
    MainWindow.setStyleSheet(style)
    MainWindow.show()

    ui.pushButton.clicked.connect(ui.openfile)
    ui.pushButton_2.clicked.connect(ui.post)

    #test
    a = ["你","1","2","3" "他", "我"]
    b = [20, 30, 40,45,62,45]

    ui.pushButton_3.clicked.connect(lambda :ui.tplot(a,b))
    sys.exit(app.exec_())
